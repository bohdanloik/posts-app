{"version":3,"sources":["components/Modal/Modal.module.css","components/SinglePost/SinglePost.module.css","components/UI/Button/Button.module.css","components/UI/Table/Table.module.css","store/constants/actionTypes.js","store/actionCreators/usersActionCreators.js","store/actionCreators/postsActionCreators.js","store/actionCreators/singlePostActionCreators.js","store/actionCreators/commentsActionCreators.js","services/api.js","components/UI/Button/Button.js","components/UI/Table/Table.js","components/Users/Users.js","components/Posts/Posts.js","components/Header/Header.js","components/Modal/Modal.js","components/SinglePost/SinglePost.js","App.js","store/reducers/usersReducer.js","store/reducers/postReducer.js","store/reducers/commentsReducer.js","store/reducers/reducer.js","store/store.js","index.js"],"names":["module","exports","actionTypes","SET_USERS","SET_POSTS","SET_POST","SET_COMMENTS","setUsersAC","response","type","payload","setPostsAC","setSinglePostAC","setCommentsAC","url","Button","props","onClick","className","style","button","children","Table","styles","table","Users","dispatch","useDispatch","users","useSelector","usersReducer","useEffect","a","axios","get","data","map","user","name","email","username","website","to","id","Posts","location","useLocation","posts","postsReducer","useParams","userId","Fragment","state","backgroundLocation","post","title","Header","Modal","postTitle","postBody","useState","setTitle","description","setDescription","navigate","useNavigate","onDismiss","backdrop","modal","form","onSubmit","event","preventDefault","for","onChange","target","value","textarea","rows","buttonWraper","SinglePost","comments","commentsReducer","body","postId","wrapper","commentWrapper","comment","class","dialogbox","tip","message","App","exact","path","element","initialState","userReducer","action","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9c83ace4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3FAPo\",\"modal\":\"Modal_modal__P3_V5\",\"form\":\"Modal_form__10UQC\",\"buttonWraper\":\"Modal_buttonWraper__K3tvR\",\"button\":\"Modal_button__2O7k8\",\"textarea\":\"Modal_textarea__16lpD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SinglePost_wrapper__1Vj0v\",\"commentWrapper\":\"SinglePost_commentWrapper__LJOns\",\"tip\":\"SinglePost_tip__3AXem\",\"dialogbox\":\"SinglePost_dialogbox__1aeJ0\",\"body\":\"SinglePost_body__31zcG\",\"message\":\"SinglePost_message__1Xrmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3hEsh\"};"," const actionTypes = {\n    SET_USERS : 'SET_USERS',\n    SET_POSTS : 'SET_POSTS',\n    SET_POST : 'SET_POST',\n    SET_COMMENTS : 'SET_COMMENTS',\n}\n\nexport default actionTypes;","import actionTypes from '../constants/actionTypes';\n\nconst setUsersAC = (response) => ({ type: actionTypes.SET_USERS, payload: response });\n\nexport default setUsersAC;","import actionTypes from '../constants/actionTypes';\n\nconst setPostsAC = (response) => ({ type: actionTypes.SET_POSTS, payload: response });\n\nexport default setPostsAC;","import actionTypes from '../constants/actionTypes';\n\nconst setSinglePostAC = (response) => ({ type: actionTypes.SET_POST, payload: response });\n\nexport default setSinglePostAC;","import actionTypes from '../constants/actionTypes';\n\nconst setCommentsAC = (response) => ({ type: actionTypes.SET_COMMENTS, payload: response });\n\nexport default setCommentsAC;","import axios from 'axios';\n\nimport setUsersAC from '../store/actionCreators/usersActionCreators';\nimport setPostsAC from '../store/actionCreators/postsActionCreators';\nimport setSinglePostAC from '../store/actionCreators/singlePostActionCreators';\nimport setCommentsAC from '../store/actionCreators/commentsActionCreators';\n\nconst url = 'https://jsonplaceholder.typicode.com/';\n\nexport const getUsers = () => {\n    return async (dispatch) => {\n        const response = await axios.get(`${url}users`);\n        dispatch(setUsersAC(response.data));\n    };\n};\n\nexport const getPosts = (userId) => {\n    return async (dispatch) => {\n        const response = await axios.get(`${url}posts?userId=${userId}`);\n        dispatch(setPostsAC(response.data));\n    };\n};\n\nexport const getPost = (postId) => {\n    return async (dispatch) => {\n        const response = await axios.get(`${url}posts/${postId}`);\n        dispatch(setSinglePostAC(response.data));\n    };\n};\n\nexport const addPost = async (postTitle, postBody, userId) => {\n    await axios.post(\n        `${url}posts`,\n        {userId: userId, title: postTitle, body: postBody}\n    );\n};\n\nexport const updatePost =  async (postTitle, postBody, userId, postId) => {\n    await axios.put(\n        `${url}posts/${postId}`,\n        {userId: userId, title: postTitle, body: postBody}\n    );\n};\n\nexport const deletePost = async (postId) => {\n    await axios.delete(`${url}posts/${postId}`);\n};\n\nexport const getComments = (postId) => {\n    return async (dispatch) => {\n        const response = await axios.get(`${url}comments?postId=${postId}`);\n        dispatch(setCommentsAC(response.data));\n    }\n}","import style from './Button.module.css';\n\nconst Button = (props) => {\n\n    return  <span onClick={props.onClick} className={style.button}>{props.children}</span>\n    \n}\n\nexport default Button;","import styles from './Table.module.css';\n\nconst Table = (props) => {\n    return <table className={styles.table}>{props.children}</table>\n}\n\nexport default Table;","import React, {useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getUsers } from '../../services/api';\nimport Button from '../UI/Button/Button';\nimport Table from '../UI/Table/Table';\n\nconst Users = () => {\n    const dispatch = useDispatch();\n    const users = useSelector(({ usersReducer: { users } }) => users);\n    \n    useEffect(() => {\n        dispatch(getUsers());\n    }, []);\n\n    return (\n        <Table>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Username</th>\n                    <th>Website</th>\n                    <th></th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {users.map(user => {\n                    return (\n                        <tr key={user.id}>\n                            <td>{user.name}</td>\n                            <td>{user.email}</td>\n                            <td>{user.username}</td>\n                            <td>{user.website}</td>\n                            <td>\n                            <Link to={`/user-posts/${user.id}`} className='open-posts'>\n                               <Button>Open</Button> \n                            </Link>\n                            </td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default Users;","import React, { useEffect } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {  getPosts } from '../../services/api';\nimport Button from '../UI/Button/Button';\nimport Table from '../UI/Table/Table';\n\nconst Posts = () => {\n    let location = useLocation();\n    const dispatch = useDispatch();\n    const posts = useSelector(({ postsReducer: { posts } }) => posts);\n    const { id } = useParams();\n    \n    useEffect(() => {\n        dispatch(getPosts(id));\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Table>\n                <thead>\n                <tr>\n                    <th>Posts Title</th>\n                    <th></th>\n                    <Link\n                        to={`/modal`}\n                        state={{ backgroundLocation: location \n                        }}>\n                        <Button>Add post</Button>\n                    </Link>\n                </tr>\n                </thead>\n\n                <tbody>\n                {posts.map(post => {\n                    return (\n                        <tr key={post.id}>\n                            <td>{post.title}</td>\n                            <td><Link to={`/posts/${post.id}`}>\n                            <Button>Open</Button>\n                            </Link></td>\n                        </tr>\n                    );\n                })}\n                </tbody>\n            </Table>\n        </React.Fragment>\n    )\n}\n\nexport default Posts;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '../UI/Button/Button';\n\nconst Header = () => {\n    return (\n        <header>\n            <Link to='/'><Button>Users List</Button></Link>\n        </header>\n    );\n};\n\nexport default Header;","import { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Button from \"../UI/Button/Button\";\nimport styles  from './Modal.module.css';\n\nconst Modal = (props) => {\n    let location = useLocation();\n\tlet state = location.state;\n    let {postTitle, postBody} = state;\n    \n    const[title, setTitle] = useState('');\n    const[description, setDescription] = useState('');\n    if(postTitle && !title) {\n        setTitle(postTitle)\n        setDescription(postBody)\n\n    }\n    \n    const titleHandler = (event) => {\n        setTitle(event.target.value)\n    }\n    const descriptionHandler = (event) => {\n        setDescription(event.target.value)\n    }\n    let navigate = useNavigate();\n\n    function onDismiss() {\n        navigate(-1);\n    }\n    const onSubmitHandler = (event) => {\n        event.preventDefault();\n    }\n    \n    return (\n        <div className={styles.backdrop}>\n            <div className={styles.modal}>\n                <form className={styles.form} onSubmit={onSubmitHandler}>\n                    <label for='title'>Title</label>\n                    <input id='title' type='text' onChange={titleHandler} value={title}></input>\n                    <label for='description'>Description</label>\n                    <textarea id='description' className={styles.textarea} rows=\"7\" value={description} onChange={descriptionHandler}></textarea>\n                    <div className={styles.buttonWraper}>\n                        <button className={styles.button} type=\"submit\" onClick={onDismiss}>SAVE</button>\n                        <button className={styles.button} onClick={onDismiss}>CLOSE</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;","import React, { useEffect } from 'react';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport {  useDispatch, useSelector } from 'react-redux';\nimport { getComments, getPost } from '../../services/api';\nimport Button from '../UI/Button/Button';\nimport styles from './SinglePost.module.css';\n\nconst SinglePost = () => {\n    const dispatch = useDispatch();\n    const comments = useSelector(({ commentsReducer: { comments } }) => comments);\n    const { title, body, userId } = useSelector(({ postsReducer: { post } }) => post);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        dispatch(getComments(id));\n    }, []);\n\n    useEffect(() => {\n        dispatch(getPost(id));\n    }, []);\n\n    let location = useLocation();\n    \n    return (\n        <div className={styles.wrapper}>\n            <h2>{ title }</h2>\n            <p>{ body }</p>\n            <Link\n                to={`/modal`}\n                state={{ backgroundLocation: location, postTitle: title, postBody: body\n                }}>\n                <Button>Edit Post</Button>\n            </Link>\n            <Link\n                to={`/user-posts/${userId}`}\n                >\n                <Button>Delete</Button>\n            </Link>\n            <div>\n                <h2>COMMENTS</h2>\n                <div className={styles.commentWrapper}>\n                    {comments.map(comment => {\n                        return (\n                            <div key={ comment.id }>\n                                <div class={styles.dialogbox}>\n                                    <div class={styles.body}>\n                                        <span class={styles.tip}></span>\n                                        <div class={styles.message}>\n                                            <h4>{`${comment.name} from ${comment.email}`}</h4>\n                                            <span>{ comment.body }</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SinglePost;","import React from 'react';\nimport { Routes, Route, useLocation } from 'react-router-dom';\n\nimport Users from './components/Users/Users';\nimport Posts from './components/Posts/Posts';\nimport Header from './components/Header/Header';\nimport Modal from './components/Modal/Modal';\nimport SinglePost from './components/SinglePost/SinglePost';\n\nconst App = () => {\n\tlet location = useLocation();\n\tlet state = location.state;\n\n  \treturn (\n\t  <React.Fragment>\n\t\t<Header />\n\t\t<Routes location={state?.backgroundLocation || location}>\n\t\t\t<Route exact path='/' element={<Users />} />\n\t\t\t<Route path='/user-posts/:id' element={<Posts />} />\n\t\t\t<Route exact path='/posts/:id' element={<SinglePost />} />\n\t\t\t<Route path='/modal' element={<Modal />} />\n\t\t</Routes>\n\t\t{state?.backgroundLocation && (\n\t\t\t<Routes>\n\t\t\t\t<Route path='/modal' element={<Modal />} />\n\t\t\t</Routes>\n\t\t)}\n\t  </React.Fragment>\n  \t);\n}\n\nexport default App;\n","import  actionTypes  from '../constants/actionTypes';\n\nconst initialState = {\n    users: [],\n};\n\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_USERS : {\n            return { ...state, users: action.payload }\n        }\n        default: return state\n    }\n};\n\nexport default userReducer;","import  actionTypes  from '../constants/actionTypes';\n\nconst initialState = {\n    posts: [],\n    post: {},\n};\n\nconst postsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_POSTS: {\n            return { ...state, posts: action.payload }\n        }\n        case actionTypes.SET_POST: {\n            return { ...state, post: action.payload }\n        }\n        default: return state\n    }\n};\n\nexport default postsReducer;","import  actionTypes  from '../constants/actionTypes';\n\nconst initialState = {\n    comments: [],\n};\n\nconst commentsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_COMMENTS: {\n            return { ...state, comments: action.payload }\n        }\n        default: return state\n    }\n};\n\nexport default commentsReducer;","import {combineReducers} from 'redux';\nimport usersReducer from './usersReducer';\nimport postsReducer from './postReducer';\nimport commentsReducer from './commentsReducer';\n\nconst reducer = combineReducers({\n    usersReducer,\n    postsReducer,\n    commentsReducer,\n});\n\nexport default reducer;","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers/reducer';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>);\n"],"sourceRoot":""}