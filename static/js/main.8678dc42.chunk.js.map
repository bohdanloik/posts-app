{"version":3,"sources":["components/Modal/Modal.module.css","components/SinglePost/SinglePost.module.css","components/UI/Button/Button.module.css","components/UI/Table/Table.module.css","store/constants/actionTypes.js","store/actionCreators/usersActionCreators.js","store/actionCreators/postsActionCreators.js","store/actionCreators/singlePostActionCreators.js","store/actionCreators/commentsActionCreators.js","services/api.js","components/UI/Button/Button.js","components/UI/Table/Table.js","components/Users/Users.js","components/Posts/Posts.js","components/Header/Header.js","components/Modal/Modal.js","components/SinglePost/SinglePost.js","App.js","store/reducers/usersReducer.js","store/reducers/postReducer.js","store/reducers/commentsReducer.js","store/reducers/reducer.js","store/store.js","index.js"],"names":["module","exports","actionTypes","SET_USERS","SET_POSTS","SET_POST","SET_COMMENTS","setUsersAC","response","type","payload","setPostsAC","setSinglePostAC","setCommentsAC","url","addPost","userId","title","body","a","axios","post","updatePost","id","put","deletePost","delete","Button","props","onClick","className","style","button","children","Table","styles","table","Users","dispatch","useDispatch","users","useSelector","usersReducer","useEffect","get","data","map","user","name","email","username","website","to","Posts","location","useLocation","posts","postsReducer","useParams","getPosts","Fragment","state","backgroundLocation","Header","Modal","navigate","useNavigate","useState","setTitle","description","setDescription","onDismiss","onSubmitHandler","event","preventDefault","Number","backdrop","modal","form","onSubmit","onChange","target","value","textarea","rows","buttonWraper","SinglePost","comments","commentsReducer","postId","onDeleteHandler","wrapper","commentWrapper","comment","class","dialogbox","tip","message","App","exact","path","element","initialState","userReducer","action","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8678dc42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3FAPo\",\"modal\":\"Modal_modal__P3_V5\",\"form\":\"Modal_form__10UQC\",\"buttonWraper\":\"Modal_buttonWraper__K3tvR\",\"button\":\"Modal_button__2O7k8\",\"textarea\":\"Modal_textarea__16lpD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SinglePost_wrapper__1Vj0v\",\"commentWrapper\":\"SinglePost_commentWrapper__LJOns\",\"tip\":\"SinglePost_tip__3AXem\",\"dialogbox\":\"SinglePost_dialogbox__1aeJ0\",\"body\":\"SinglePost_body__31zcG\",\"message\":\"SinglePost_message__1Xrmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3hEsh\"};"," const actionTypes = {\n    SET_USERS : 'SET_USERS',\n    SET_POSTS : 'SET_POSTS',\n    SET_POST : 'SET_POST',\n    SET_COMMENTS : 'SET_COMMENTS',\n}\n\nexport default actionTypes;\n","import actionTypes from '../constants/actionTypes';\n\nconst setUsersAC = (response) => ({ type: actionTypes.SET_USERS, payload: response });\n\nexport default setUsersAC;\n","import actionTypes from '../constants/actionTypes';\n\nconst setPostsAC = (response) => ({ type: actionTypes.SET_POSTS, payload: response });\n\nexport default setPostsAC;\n","import actionTypes from '../constants/actionTypes';\n\nconst setSinglePostAC = (response) => ({ type: actionTypes.SET_POST, payload: response });\n\nexport default setSinglePostAC;\n","import actionTypes from '../constants/actionTypes';\n\nconst setCommentsAC = (response) => ({ type: actionTypes.SET_COMMENTS, payload: response });\n\nexport default setCommentsAC;\n","import axios from 'axios';\n\nimport setUsersAC from '../store/actionCreators/usersActionCreators';\nimport setPostsAC from '../store/actionCreators/postsActionCreators';\nimport setSinglePostAC from '../store/actionCreators/singlePostActionCreators';\nimport setCommentsAC from '../store/actionCreators/commentsActionCreators';\n\nconst url = 'https://jsonplaceholder.typicode.com/';\n\nexport const getUsers = () => {\n    return async (dispatch) => {\n        const response = await axios.get(`${url}users`);\n        dispatch(setUsersAC(response.data));\n    };\n};\n\nexport const getPosts = (userId) => {\n    return async (dispatch) => {\n        const response = await axios.get(`${url}posts?userId=${userId}`);\n        dispatch(setPostsAC(response.data));\n    };\n};\n\nexport const getPost = (postId) => {\n    return async (dispatch) => {\n        const response = await axios.get(`${url}posts/${postId}`);\n        dispatch(setSinglePostAC(response.data));\n    };\n};\n\nexport const addPost = async (userId, title, body) => {\n    await axios.post(`${url}posts`, { userId, title, body });\n};\n\nexport const updatePost =  async (userId, id, title, body, ) => {\n    await axios.put(`${url}posts/${id}`, { userId, id, title, body });\n};\n\nexport const deletePost = async (id) => {\n    await axios.delete(`${url}posts/${id}`);\n};\n\nexport const getComments = (postId) => {\n    return async (dispatch) => {\n        const response = await axios.get(`${url}comments?postId=${postId}`);\n        dispatch(setCommentsAC(response.data));\n    }\n}\n","import style from './Button.module.css';\n\nconst Button = (props) => {\n    return  <span onClick={props.onClick} className={style.button}>{props.children}</span>\n}\n\nexport default Button;\n","import styles from './Table.module.css';\n\nconst Table = (props) => {\n    return <table className={styles.table}>{props.children}</table>\n}\n\nexport default Table;\n","import React, {useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getUsers } from '../../services/api';\nimport Button from '../UI/Button/Button';\nimport Table from '../UI/Table/Table';\n\nconst Users = () => {\n    const dispatch = useDispatch();\n    const users = useSelector(({ usersReducer: { users } }) => users);\n    \n    useEffect(() => {\n        dispatch(getUsers());\n    }, []);\n\n    return (\n        <Table>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Username</th>\n                    <th>Website</th>\n                    <th></th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {users.map(user => {\n                    return (\n                        <tr key={user.id}>\n                            <td>{user.name}</td>\n                            <td>{user.email}</td>\n                            <td>{user.username}</td>\n                            <td>{user.website}</td>\n                            <td>\n                                <Link to={`/user-posts/${user.id}`} className='open-posts'>\n                                    <Button>Open</Button> \n                                </Link>\n                            </td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default Users;\n","import React, { useEffect } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPosts } from '../../services/api';\nimport Button from '../UI/Button/Button';\nimport Table from '../UI/Table/Table';\n\nconst Posts = () => {\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const posts = useSelector(({ postsReducer: { posts } }) => posts);\n    const { id: userId } = useParams();\n    \n    useEffect(() => {\n        dispatch(getPosts(userId));\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>Posts Title</th>\n                        <th></th>\n                        <th>\n                            <Link\n                                to={`/modal`}\n                                state={{\n                                    backgroundLocation: location,\n                                    userId,\n                                }}>\n                                <Button>Add post</Button>\n                            </Link>\n                        </th>\n                        \n                    </tr>\n                </thead>\n\n                <tbody>\n                    {posts.map(post => {\n                        return (\n                            <tr key={post.id}>\n                                <td>{post.title}</td>\n                                <td>\n                                    <Link to={`/posts/${post.id}`}>\n                                        <Button>Open</Button>\n                                    </Link>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        </React.Fragment>\n    )\n}\n\nexport default Posts;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '../UI/Button/Button';\n\nconst Header = () => {\n    return (\n        <header>\n            <Link to='/'><Button>Users List</Button></Link>\n        </header>\n    );\n};\n\nexport default Header;\n","import { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport styles  from './Modal.module.css';\nimport { addPost, updatePost } from '../../services/api';\n\nconst Modal = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n\tconst state = location.state;\n    const { userId, post } = state;\n    \n    const[title, setTitle] = useState('');\n    const[description, setDescription] = useState('');\n\n    if(post && !title) {\n        setTitle(post.title);\n        setDescription(post.body);\n    }\n    \n    const titleHandler = (event) => {\n        setTitle(event.target.value);\n    }\n    const descriptionHandler = (event) => {\n        setDescription(event.target.value);\n    }\n    const onDismiss = () => {\n        navigate(-1);\n    }\n    const onSubmitHandler = async (event) => {\n        event.preventDefault();\n        post\n            ? await updatePost(Number(userId), post?.id, title, description)\n            : await addPost(Number(userId), title, description);\n    }\n    \n    return (\n        <div className={styles.backdrop}>\n            <div className={styles.modal}>\n                <form className={styles.form} onSubmit={onSubmitHandler}>\n                    <label>Title</label>\n                    <input type='text' onChange={titleHandler} value={title}></input>\n                    <label>Description</label>\n                    <textarea\n                        className={styles.textarea}\n                        rows=\"7\"\n                        value={description}\n                        onChange={descriptionHandler}\n                    ></textarea>\n                    <div className={styles.buttonWraper}>\n                        <button\n                            className={styles.button}\n                            type=\"submit\"\n                            onClick={onDismiss}\n                        >SAVE</button>\n                        <button\n                            className={styles.button}\n                            onClick={onDismiss}\n                        >CLOSE</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;\n","import React, { useEffect } from 'react';\nimport { Link, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deletePost, getComments, getPost } from '../../services/api';\nimport Button from '../UI/Button/Button';\nimport styles from './SinglePost.module.css';\n\nconst SinglePost = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const comments = useSelector(({ commentsReducer: { comments } }) => comments);\n    const { title, body, userId } = useSelector(({ postsReducer: { post } }) => post);\n    const { id } = useParams();\n\n    useEffect(() => {\n        dispatch(getComments(id));\n    }, []);\n\n    useEffect(() => {\n        dispatch(getPost(id));\n    }, []);\n\n    const onDeleteHandler = async() => {\n        await deletePost(id);\n        navigate(`/user-posts/${userId}`)\n    };\n\n    return (\n        <div className={styles.wrapper}>\n            <h2>{title}</h2>\n            <p>{body}</p>\n            <Link\n                to={`/modal`}\n                state={{\n                    backgroundLocation: location,\n                    userId,\n                    post: { id, title, body }\n                }}>\n                <Button>Edit Post</Button>\n            </Link>\n            <Button onClick={onDeleteHandler}>Delete</Button>\n            <div>\n                <h2>COMMENTS</h2>\n                <div className={styles.commentWrapper}>\n                    {comments.map(comment => {\n                        return (\n                            <div key={comment.id}>\n                                <div class={styles.dialogbox}>\n                                    <div class={styles.body}>\n                                        <span class={styles.tip}></span>\n                                        <div class={styles.message}>\n                                            <h4>{`${comment.name} from ${comment.email}`}</h4>\n                                            <span>{comment.body}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SinglePost;\n","import React from 'react';\nimport { Routes, Route, useLocation } from 'react-router-dom';\n\nimport Users from './components/Users/Users';\nimport Posts from './components/Posts/Posts';\nimport Header from './components/Header/Header';\nimport Modal from './components/Modal/Modal';\nimport SinglePost from './components/SinglePost/SinglePost';\n\nconst App = () => {\n\tconst location = useLocation();\n\tconst state = location.state;\n\n  \treturn (\n\t  <React.Fragment>\n\t\t<Header />\n\t\t<Routes location={state?.backgroundLocation || location}>\n\t\t\t<Route exact path='/' element={<Users />} />\n\t\t\t<Route path='/user-posts/:id' element={<Posts />} />\n\t\t\t<Route exact path='/posts/:id' element={<SinglePost />} />\n\t\t\t<Route path='/modal' element={<Modal />} />\n\t\t</Routes>\n\t\t{state?.backgroundLocation && (\n\t\t\t<Routes>\n\t\t\t\t<Route path='/modal' element={<Modal />} />\n\t\t\t</Routes>\n\t\t)}\n\t  </React.Fragment>\n  \t);\n}\n\nexport default App;\n","import  actionTypes  from '../constants/actionTypes';\n\nconst initialState = {\n    users: [],\n};\n\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_USERS : {\n            return { ...state, users: action.payload }\n        }\n        default: return state\n    }\n};\n\nexport default userReducer;\n","import  actionTypes  from '../constants/actionTypes';\n\nconst initialState = {\n    posts: [],\n    post: {},\n};\n\nconst postsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_POSTS: {\n            return { ...state, posts: action.payload }\n        }\n        case actionTypes.SET_POST: {\n            return { ...state, post: action.payload }\n        }\n        default: return state\n    }\n};\n\nexport default postsReducer;\n","import  actionTypes  from '../constants/actionTypes';\n\nconst initialState = {\n    comments: [],\n};\n\nconst commentsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_COMMENTS: {\n            return { ...state, comments: action.payload }\n        }\n        default: return state\n    }\n};\n\nexport default commentsReducer;\n","import {combineReducers} from 'redux';\nimport usersReducer from './usersReducer';\nimport postsReducer from './postReducer';\nimport commentsReducer from './commentsReducer';\n\nconst reducer = combineReducers({\n    usersReducer,\n    postsReducer,\n    commentsReducer,\n});\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers/reducer';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n"],"sourceRoot":""}